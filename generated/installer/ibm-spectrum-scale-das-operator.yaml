apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/instance: ibm-spectrum-scale-das
    app.kubernetes.io/name: operator
    control-plane: controller-manager
  name: ibm-spectrum-scale-das
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.0
  creationTimestamp: null
  name: haservices.das.scale.ibm.com
spec:
  group: das.scale.ibm.com
  names:
    kind: HAService
    listKind: HAServiceList
    plural: haservices
    singular: haservice
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.ip_range
      name: IP_range
      type: string
    - jsonPath: .status.scale_factor
      name: Scale_factor
      type: integer
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: HAService is the Schema for the haservices API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: HAServiceSpec defines the desired state of HAService
            properties:
              autoHA:
                description: HAService performs automatic IP fail-over & fail-back,
                  if the autoHA is set to 'true'. Defaults to 'true'.
                type: boolean
              ip_range:
                description: 'Ip_range is an example field of HAService. Provide pool
                  of IP addresses that can be used for address allocations for s3
                  services HPO-MetalLB will take care of assigning and unassigning
                  individual addresses to the s3 service running on every worker node
                  which are part of IBM Container Native Storage Access cluster. Make
                  sure the IP address range provided is equivalent to the number of
                  worker nodes which are labled to be used as IBM Container Native
                  Storage Access node. example: Supported number of worker nodes in
                  ocp environment is 3. Ip_range: "10.10.10.11-10.10.10.13" -> these
                  IP address would be allocated to the s3 service running on each
                  of the ocp worker node.'
                type: string
              scale_factor:
                description: 'Scale_factor is an example field of HAService. Scale_factor
                  controlls scaling of the s3 object service across worker nodes.
                  Only static scaling is supported. example: Scale_factor: 5 -> means
                  5 s3 service endpoints would be spawned per ocp worker node to handle
                  the s3 service requests.'
                type: integer
            required:
            - ip_range
            type: object
          status:
            description: HAServiceStatus defines the observed state of HAService
            properties:
              Number_of_nodes_labeled:
                type: integer
              ip_range:
                description: 'INSERT ADDITIONAL STATUS FIELD - define observed state
                  of cluster Important: Run "make" to regenerate code after modifying
                  this file Ip_range is an example field of HAService. pool of IP
                  addresses that is used for address allocations for s3 services HPO-MetalLB
                  will take care of assigning and unassigning individual addresses
                  to the s3 service'
                type: string
              scale_factor:
                description: 'Scale_factor is an example field of HAService. Scale_factor
                  controlls scaling of the s3 object service across worker nodes.
                  This is required to track the scalefactor which is active in cluster,
                  its currently populated initially onto global var `CurrentScalefactor`
                  in utilityFunction.go but we have to store it in status, else operator
                  reboot wipes of vars in memory. Note: we support scalefactor independent
                  of metallb install.'
                type: integer
              service_mappings:
                items:
                  properties:
                    current_node:
                      type: string
                    default_node:
                      type: string
                    svc_name:
                      type: string
                  type: object
                type: array
            required:
            - ip_range
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.0
  creationTimestamp: null
  name: s3services.das.scale.ibm.com
spec:
  group: das.scale.ibm.com
  names:
    kind: S3Service
    listKind: S3ServiceList
    plural: s3services
    singular: s3service
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.enable
      name: Enabled
      type: boolean
    - jsonPath: .status.phase
      name: Phase
      type: string
    - jsonPath: .status.s3Endpoints
      name: S3-Endpoints
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: S3Service is the Schema for the s3services API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: S3ServiceSpec defines the desired state of S3Service
            properties:
              dbStorageClass:
                description: Storage Class to be used to configure PVC for the S3
                  Service Database. If not provided DAS operator will check for storage
                  class defined on the OCP cluster, with provisioner 'spectrumscale.csi.ibm.com',
                  and choose the same, if there is only one with provisioner being
                  'spectrumscale.csi.ibm.com'.
                type: string
              enable:
                description: Enable or Disable S3 Service on the OCP cluster, by setting
                  this param to true or false
                type: boolean
              enableMD5:
                description: Enable or Disable md5sum calculation for s3 object at
                  s3 service level, by setting this param to true or false
                type: boolean
              license:
                description: The license must be accepted by the end user that provides
                  a way to specify the IBM Spectrum Scale for Data Access Service.
                properties:
                  accept:
                    description: Read the license and specify "true" to accept or
                      "false" to not accept. https://www14.software.ibm.com/cgi-bin/weblap/lap.pl?li_formnum=L-CFIE-CJJN8G
                      BY DOWNLOADING, INSTALLING, COPYING, ACCESSING, CLICKING ON
                      AN "ACCEPT" BUTTON, OR OTHERWISE USING THE PROGRAM, LICENSEE
                      AGREES TO THE TERMS OF THIS AGREEMENT. IF YOU ARE ACCEPTING
                      THESE TERMS ON BEHALF OF LICENSEE, YOU REPRESENT AND WARRANT
                      THAT YOU HAVE FULL AUTHORITY TO BIND LICENSEE TO THESE TERMS.
                      IF YOU DO NOT AGREE TO THESE TERMS, * DO NOT DOWNLOAD, INSTALL,
                      COPY, ACCESS, CLICK ON AN "ACCEPT" BUTTON, OR USE THE PROGRAM;
                      AND * PROMPTLY RETURN THE UNUSED MEDIA AND DOCUMENTATION TO
                      THE PARTY FROM WHOM IT WAS OBTAINED FOR A REFUND OF THE AMOUNT
                      PAID. IF THE PROGRAM WAS DOWNLOADED, DESTROY ALL COPIES OF THE
                      PROGRAM.
                    enum:
                    - true
                    type: boolean
                  license:
                    description: It specifies the IBM Spectrum Scale edition, "data-access-service-s3"
                      // +kubebuilder:validation:Enum:=data-access-service-s3
                    type: string
                required:
                - accept
                - license
                type: object
              scaleDataBackend:
                description: IBM Spectrum Scale Filesystem information, that is configured
                  with IBM Spectrum Scale CSI driver, which is to be enabled for S3
                  data access. This would act as data backend for access using the
                  S3 service interface. If not provided, DAS operator will try to
                  auto-discover it from IBM Spectrum Scale CSI driver namespace, from
                  CR 'csiscaleoperators' spec, if there is only one of this kind.
                items:
                  type: string
                type: array
            required:
            - license
            type: object
          status:
            description: S3ServiceStatus defines the observed state of S3Service
            properties:
              enable:
                description: Showing S3Service status, based on whether it is Enabled
                  or Disabled
                type: boolean
              phase:
                description: S3Service phase - based on Noobaa service deployment
                  phase
                type: string
              s3Endpoints:
                description: S3 Service Endpoint for Data Access
                items:
                  type: string
                type: array
            required:
            - phase
            - s3Endpoints
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: ibm-spectrum-scale-das
    app.kubernetes.io/name: operator
  name: ibm-spectrum-scale-das-operator
  namespace: ibm-spectrum-scale-das
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: ibm-spectrum-scale-das-leader-election-role
  namespace: ibm-spectrum-scale-das
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - update
- apiGroups:
  - ""
  resources:
  - configmaps/status
  verbs:
  - get
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: ibm-spectrum-scale-das-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - get
  - list
  - patch
  - watch
- apiGroups:
  - ""
  resources:
  - endpoints
  verbs:
  - create
  - get
  - list
  - patch
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - create
  - delete
  - get
  - update
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - patch
  - watch
  - update
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - create
  - delete
  - get
  - list
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - create
  - delete
  - get
  - list
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - create
  - delete
  - update
  - patch
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  verbs:
  - create
  - delete
  - get
  - list
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - create
  - delete
  - get
  - list
  - patch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apps
  resources:
  - daemonsets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apps
  resources:
  - deployments/scale
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apps
  resources:
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - config.openshift.io
  resources:
  - clusterversions
  verbs:
  - get
  - list
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - update
- apiGroups:
  - ""
  resources:
  - pods/status
  verbs:
  - get
- apiGroups:
  - csi.ibm.com
  resources:
  - csiscaleoperators
  verbs:
  - get
  - list
- apiGroups:
  - das.scale.ibm.com
  resources:
  - haservices
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - das.scale.ibm.com
  resources:
  - haservices/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - das.scale.ibm.com
  resources:
  - s3services
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - das.scale.ibm.com
  resources:
  - s3services/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - metallb.io
  resources:
  - ipaddresspools
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - metallb.io
  resources:
  - l2advertisements
  verbs:
  - create
  - delete
- apiGroups:
  - metallb.io
  resources:
  - metallbs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - noobaa.io
  resources:
  - namespacestores
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - noobaa.io
  resources:
  - noobaas
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - noobaa.io/v1alpha1
  resources:
  - services/status
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - operators.coreos.com
  resources:
  - catalogsources
  verbs:
  - create
  - delete
  - get
  - patch
  - update
- apiGroups:
  - operators.coreos.com
  resources:
  - clusterserviceversions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - operators.coreos.com
  resources:
  - installplans
  verbs:
  - get
  - patch
- apiGroups:
  - operators.coreos.com
  resources:
  - operatorgroups
  verbs:
  - create
  - delete
  - get
  - patch
  - update
- apiGroups:
  - operators.coreos.com
  resources:
  - subscriptions
  verbs:
  - create
  - delete
  - get
  - update
  - patch
- apiGroups:
  - packages.operators.coreos.com
  resources:
  - packagemanifests
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - policy
  resources:
  - podsecuritypolicies
  verbs:
  - create
  - delete
  - use
- apiGroups:
  - policy
  resourceNames:
  - controller
  resources:
  - podsecuritypolicies
  verbs:
  - create
  - delete
  - use
- apiGroups:
  - policy
  resourceNames:
  - speaker
  resources:
  - podsecuritypolicies
  verbs:
  - create
  - delete
  - use
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - use
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterroles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - use
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - roles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - route.openshift.io
  resources:
  - routes
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - scale.ibm.com
  resources:
  - scaleclusters
  verbs:
  - get
  - list
- apiGroups:
  - scale.spectrum.ibm.com
  resources:
  - clusters
  verbs:
  - get
  - list
- apiGroups:
  - scale.spectrum.ibm.com
  resources:
  - filesystems
  verbs:
  - get
  - list
- apiGroups:
  - scale.spectrum.ibm.com
  resources:
  - remoteclusters
  verbs:
  - get
  - list
- apiGroups:
  - security.openshift.io
  resourceNames:
  - privileged
  resources:
  - securitycontextconstraints
  verbs:
  - get
  - list
  - use
  - watch
- apiGroups:
  - storage.k8s.io
  resources:
  - storageclasses
  verbs:
  - get
  - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: ibm-spectrum-scale-das-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: ibm-spectrum-scale-das-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: ibm-spectrum-scale-das-leader-election-rolebinding
  namespace: ibm-spectrum-scale-das
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ibm-spectrum-scale-das-leader-election-role
subjects:
- kind: ServiceAccount
  name: ibm-spectrum-scale-das-operator
  namespace: ibm-spectrum-scale-das
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: ibm-spectrum-scale-das-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ibm-spectrum-scale-das-manager-role
subjects:
- kind: ServiceAccount
  name: ibm-spectrum-scale-das-operator
  namespace: ibm-spectrum-scale-das
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: ibm-spectrum-scale-das-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ibm-spectrum-scale-das-proxy-role
subjects:
- kind: ServiceAccount
  name: ibm-spectrum-scale-das-operator
  namespace: ibm-spectrum-scale-das
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: controller-manager
  name: ibm-spectrum-scale-das-controller-manager-metrics-service
  namespace: ibm-spectrum-scale-das
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    productVersion: 5.1.5
  labels:
    app.kubernetes.io/instance: ibm-spectrum-scale-das
    app.kubernetes.io/managed-by: ibm-spectrum-scale-das-operator
    app.kubernetes.io/name: operator
    control-plane: controller-manager
    product: ibm-spectrum-scale-das
    release: ibm-spectrum-scale-das-operator
  name: ibm-spectrum-scale-das-controller-manager
  namespace: ibm-spectrum-scale-das
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: ibm-spectrum-scale-das
      app.kubernetes.io/name: operator
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        productID: ibm-spectrum-scale-das-operator
        productName: IBM Spectrum Scale DAS Operator
        productVersion: 5.1.5
      labels:
        app.kubernetes.io/instance: ibm-spectrum-scale-das
        app.kubernetes.io/managed-by: ibm-spectrum-scale-das-operator
        app.kubernetes.io/name: operator
        control-plane: controller-manager
        product: ibm-spectrum-scale-das
        release: ibm-spectrum-scale-das-operator
    spec:
      automountServiceAccountToken: true
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.5.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
      - args:
        - --metrics-addr=127.0.0.1:8080
        - --enable-leader-election
        command:
        - /manager
        env:
        - name: WATCH_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: LOG_LEVEL
          value: info
        - name: DAS_ENDPOINT_IMAGE
          value: cp.icr.io/cp/spectrum/scale/das/s3/ibm-spectrum-scale-das-endpoint@sha256:6075bde7b992e0f0d167058246fb38da3f8bddaa0c303017c2e23d0345b1a354
        - name: NOOBAAMON_IMAGE
          value: cp.icr.io/cp/spectrum/scale/ibm-spectrum-scale-monitor@sha256:949c8211b7771a871231da09e42c3b11de99a98506d98d9f2b78fd47e8cfd18b
        image: icr.io/cpopen/ibm-spectrum-scale-das-operator@sha256:0a4fd9056573ac8cc50b30260675b2badfef0d52084543fdb8b7603bb9989f01
        imagePullPolicy: IfNotPresent
        securityContext:
          privileged: false
          allowPrivilegeEscalation: false
          runAsUser: 10001
          runAsNonRoot: true
        name: manager
        resources:
          limits:
            cpu: 100m
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 50Mi
      imagePullSecrets:
      - name: ibm-entitlement-key
      serviceAccountName: ibm-spectrum-scale-das-operator
      terminationGracePeriodSeconds: 10
