---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: cloudcsidisks.scale.spectrum.ibm.com
spec:
  group: scale.spectrum.ibm.com
  names:
    categories:
    - scale
    kind: CloudCSIDisk
    listKind: CloudCSIDiskList
    plural: cloudcsidisks
    singular: cloudcsidisk
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: CloudCSIDisk is the Schema for the cloudcsidisks API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: CloudCSIDiskSpec defines the desired state of CloudCSIDisk
            properties:
              filesystem:
                description: filesystem is the name of the filesystem resource
                maxLength: 253
                pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                type: string
              platform:
                description: 'It specifies the Cloud platform for IBM Spectrum Scale
                  deployment (Ex: "AWS", "Azure" or "VSphere").'
                enum:
                - ""
                - AWS
                - Azure
                - BareMetal
                - GCP
                - Libvirt
                - OpenStack
                - None
                - VSphere
                - oVirt
                - IBMCloud
                - KubeVirt
                - EquinixMetal
                type: string
              pool:
                description: pool is the user provided value for creating spectrum
                  scale filesystem storage pool.
                properties:
                  capacity:
                    anyOf:
                    - type: integer
                    - type: string
                    description: 'capacity is the user provided value for filesystem
                      pool size (Ex: 1Ti)'
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                  disks:
                    description: disks is a list of local disk names to be included
                      from this pool
                    items:
                      type: string
                    type: array
                  name:
                    default: system
                    description: 'name is the desired name of this pool (default:
                      system)'
                    type: string
                  storageClass:
                    description: storageClass is the storage class that will be verified
                      and used for disk device creation
                    type: string
                type: object
              replication:
                default: 3-way
                description: replication is the number of replicas to create for each
                  data/metadata block that is written to the filesystem (only 3-way
                  is supported)
                enum:
                - 3-way
                type: string
            required:
            - filesystem
            - platform
            - pool
            type: object
          status:
            description: CloudCSIDiskStatus defines the observed state of CloudCSIDisk
            properties:
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
