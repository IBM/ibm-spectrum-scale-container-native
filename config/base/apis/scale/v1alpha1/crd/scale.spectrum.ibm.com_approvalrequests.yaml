---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.0
  creationTimestamp: null
  name: approvalrequests.scale.spectrum.ibm.com
spec:
  group: scale.spectrum.ibm.com
  names:
    categories:
    - scale
    - scalejobs
    - scaleapprovals
    kind: ApprovalRequest
    listKind: ApprovalRequestList
    plural: approvalrequests
    shortNames:
    - approvalreq
    singular: approvalrequest
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.requestObjectRef.kind
      name: Type
      type: string
    - jsonPath: .spec.requestObjectRef.name
      name: RequestObject
      type: string
    - jsonPath: .spec.approve
      name: Approve
      type: string
    - jsonPath: .spec.description
      name: Description
      priority: 10
      type: string
    - jsonPath: .status.lastScheduleTime
      name: Last Schedule Time
      type: date
    - jsonPath: .status.lastSuccessfulTime
      name: Last Successful Time
      type: date
    - jsonPath: .status.scheduled.id
      name: Running
      type: string
    - jsonPath: .status.completed.reason
      name: Completed
      type: string
    - jsonPath: .status.completed.message
      name: Completed Message
      priority: 10
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ApprovalRequest is the Schema for the jobs API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ApprovalRequestSpec defines the desired state of ApprovalRequest
            properties:
              approve:
                description: approve is the approval mechanism that tells this job
                  to take action to approve or reject the request
                enum:
                - approved
                - rejected
                type: string
              description:
                description: description provides more information about the approvalrequest
                type: string
              maxRetryFailed:
                default: infinity
                description: maxRetryFailed is the maximum number of retry attempts
                  on consecutive failures. If set to "0", no retries are performed.
                  If set to "infinity", the job will retry failed runs until success.
                  The default is "infinity".
                type: string
              requestObjectRef:
                description: RequestObjectRef is the object reference which needs
                  approval
                properties:
                  apiGroup:
                    description: APIGroup is the group for the resource being referenced.
                      If APIGroup is not specified, the specified Kind must be in
                      the core API group. For any other third-party types, APIGroup
                      is required.
                    type: string
                  kind:
                    description: Kind is the type of resource being referenced
                    type: string
                  name:
                    description: Name is the name of resource being referenced
                    type: string
                  namespace:
                    description: Namespace is the namespace of resource being referenced
                      Note that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant
                      object is required in the referent namespace to allow that namespace's
                      owner to accept the reference. See the ReferenceGrant documentation
                      for details. (Alpha) This field requires the CrossNamespaceVolumeDataSource
                      feature gate to be enabled.
                    type: string
                required:
                - kind
                - name
                type: object
              run:
                description: 'run can be: "suspend" or "once".  Default is to always
                  run on schedule. "suspend" pauses scheduling of subsequent jobs,
                  it does not apply to Running jobs. "once" will run the job successfully
                  once according to schedule.'
                enum:
                - suspend
                - once
                type: string
              schedule:
                description: schedule is in Cron format, see https://en.wikipedia.org/wiki/Cron.
                type: string
            required:
            - requestObjectRef
            type: object
          status:
            properties:
              completed:
                properties:
                  message:
                    type: string
                  reason:
                    type: string
                required:
                - message
                - reason
                type: object
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              consecutiveFailedRuns:
                description: consecutiveFailedRuns is the number of consecutive failed
                  job runs
                type: integer
              lastApprove:
                description: lastApprove is the previous value of the approve field
                  in the spec before it was changed
                type: string
              lastScheduleTime:
                description: lastScheduleTime is the last time the job was scheduled.
                format: date-time
                type: string
              lastSuccessfulTime:
                description: lastSuccessfulTime is the last time the job completed
                  successfully.
                format: date-time
                type: string
              scheduled:
                properties:
                  id:
                    description: id may be an identifier corresponding to the job.
                    type: string
                required:
                - id
                type: object
            required:
            - consecutiveFailedRuns
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
